@model IEnumerable<Product>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor http
@{
    ViewData["Title"] = "Index";
    var listHeight = (List<byte>)ViewData["ListHeight"];
    var listWidth = (List<byte>)ViewData["ListWidth"];
    var listLength = (List<byte>)ViewData["ListLength"];
    var listCategory = (List<Category>)ViewData["ListCategory"];
    var listType = (List<Category>)ViewData["ListType"];
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="close" data-dismiss="alert" aria-label="close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (User.IsInRole(IdentityHelper.Admin) || User.IsInRole(IdentityHelper.Customer))
{
    <h1>Products</h1>

    @if (User.IsInRole(IdentityHelper.Admin))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }


    <div class="dropdown btn-group">
        <div class="p-1">
            @if (ViewData["Height"] != null)
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownHeightButton" value="@ViewData["Height"]" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @ViewData["Height"]
                </button>
            }
            else
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownHeightButton" value="Height" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Height
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @for (int i = 0; i < listHeight.Count; i++)
                {
                    <a class="dropdown-item" asp-action="Index" asp-route-id="1" asp-route-height="@listHeight[i]">@listHeight[i]</a>
                }
            </div>
        </div>
        <div class="p-1">
            @if (ViewData["Width"] != null)
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @ViewData["Width"]
                </button>
            }
            else
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Width
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @for (int i = 0; i < listWidth.Count; i++)
                {
                    <a class="dropdown-item" asp-action="Index" asp-route-id="1" asp-route-height="@ViewData["Height"]" asp-route-width="@listWidth[i]">@listWidth[i]</a>
                }
            </div>
        </div>
        <div class="p-1">
            @if (ViewData["Length"] != null)
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @ViewData["Length"]
                </button>
            }
            else
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Length
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @for (int i = 0; i < listLength.Count; i++)
                {
                    <a class="dropdown-item" asp-action="Index" asp-route-id="1" asp-route-height="@ViewData["Height"]" asp-route-width="@ViewData["Width"]" asp-route-length="@listLength[i]">@listLength[i]</a>
                }
            </div>
        </div>
        <div class="p-1">
            @if (ViewData["Category"] != null)
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @ViewData["Category"]
                </button>
            }
            else
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Category
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @for (int i = 0; i < listCategory.Count; i++)
                {
                    <a class="dropdown-item" asp-action="Index" asp-route-id="1" asp-route-height="@ViewData["Height"]" asp-route-width="@ViewData["Width"]" asp-route-length="@ViewData["Length"]"
                       asp-route-category="@listCategory[i]">@listCategory[i]</a>
                }
            </div>
        </div>
        <div class="p-1">
            @if (ViewData["Type"] != null)
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @ViewData["Type"]
                </button>
            }
            else
            {
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Treatment Type
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @for (int i = 0; i < listType.Count; i++)
                {
                    <a class="dropdown-item" asp-action="Index" asp-route-id="1" asp-route-height="@ViewData["Height"]" asp-route-width="@ViewData["Width"]" asp-route-length="@ViewData["Length"]"
                       asp-route-category="@ViewData["Category"]" asp-route-treatmentType="@listType[i]">@listType[i]</a>
                }
            </div>
        </div>
        <div class="p-1">
            <a class="btn btn-secondary" asp-action="Index" asp-route-id="1" asp-route-height=null asp-route-width="null" asp-route-length="null" asp-route-category="Category" asp-route-treatmentType="Treatment Type">Clear</a>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Height)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Width)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Length)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    Treatment Type
                </th>
                @if (User.IsInRole(IdentityHelper.Admin))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.OnHand)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Sold)
                    </th>
                    <th></th>
                }
            </tr>


        </thead>
        <tbody>

            @{
                string previousUrl = http.HttpContext.Request.Path;
            }
            @{
                int j = 0;
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Height)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Width)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length)
                    </td>
                    <td>
                        @if (item.Category.Count > 0)
                        {
                            @Html.DisplayFor(modelItem => item.Category[0].CategoryName)
                        }
                    </td>
                    <td>
                        @if (item.Category.Count > 1)
                        {
                            @Html.DisplayFor(modelItem => item.Category[1].CategoryName)
                        }
                    </td>
                    @if (User.IsInRole(IdentityHelper.Admin))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.OnHand)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Sold)
                        </td>
                        <td>
                            <a asp-action="UpdateInventory" asp-route-id="@item.ProductID">Update Inventory</a> |
                            <a asp-action="Delete" asp-route-id="@item.ProductID">Delete</a>
                        </td>
                    }
                    else if (User.IsInRole(IdentityHelper.Customer))
                    {
                        <td>
                            <div class="form-group">
                                <form asp-controller="Cart" asp-action="Add" method="post">
                                    <input type="text" name="qty" id="qty" />
                                    <input type="hidden" name="prodId" id="prodId" value="@item.ProductID" />
                                    <a class="btn btn-primary" type="submit" id="add" onclick="changeQuantity(this)" asp-route-id="@item.ProductID" asp-route-previousUrl="@previousUrl"
                                       asp-route-inputquantity="0" asp-controller="Cart" asp-action="Add" >Add</a>
                                </form>
                            </div>
                        </td>
                    }
                </tr>
                j++;
            }
        </tbody>
    </table>
    <ul class="pagination">
        @for (int i = 1; i <= (int)ViewData["MaxPage"]; i++)
        {
            if (i == (int)ViewData["CurrentPage"])
            {
                <li class="page-item active">
                    <a class="page-link" asp-action="Index" asp-route-id="@i" asp-route-height="@ViewData["Height"]" asp-route-width="@ViewData["Width"]" asp-route-length="@ViewData["Length"]"
                       asp-route-category="@ViewData["Category"]" asp-route-treatmentType="@ViewData["Type"]">@i</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-id="@i" asp-route-height="@ViewData["Height"]" asp-route-width="@ViewData["Width"]" asp-route-length="@ViewData["Length"]"
                       asp-route-category="@ViewData["Category"]" asp-route-treatmentType="@ViewData["Type"]">@i</a>
                </li>
            }

        }
    </ul>
    
}
else
{
    <h1 class="text-danger">Log in or register to see Products.</h1>
}
<script src="~/js/AddToCart.js"></script>